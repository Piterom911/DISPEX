{"version":3,"sources":["Components/CreateClientForm/CreateClientForm.module.css","Components/FindAddressForm/FindAddressForm.module.css","api/commonApi.js","redux/addressReducer/addressReducer.js","redux/appReducer/appReducer.js","redux/clientsReducer/clientsReducer.js","redux/clientReducer/clientReducer.js","Components/FindAddressForm/FindAddressForm.js","Components/CreateClientForm/CreateClientForm.js","Components/EditClientForm/EditClientForm.js","Components/Clients/Clients.js","App.js","reportWebVitals.js","redux/store.js","index.js","Components/Clients/Client.module.css","App.module.css"],"names":["module","exports","instance","axios","create","baseURL","addressApi","get","id","clientApi","clientData","post","clientId","delete","clientsApi","addressID","addressReducerInitialState","streets","houses","apartments","chosenStreet","Id","Prefix","Name","ShortName","CityId","City","NameWithPrefix","chosenHouse","Type","Text","chosenApartment","Flat","TypeId","TypeName","isChosenApartment","actionTypeNames","setChosenStreet","type","payload","setChosenHouse","setChosenApartment","toggleIsChosenApartment","status","clientsInApartmentInitialState","errorMessage","successMessage","setErrorMessage","setSuccessMessage","clients","clientsText","setClients","changeClientsText","text","getClientsInApartment","dispatch","getState","a","address","filter","h","response","data","length","Error","clientInitialState","result","message","addressId","createClient","Phone","Email","BindId","Option","Select","FindAddressForm","useDispatch","useState","selectorsStatus","setSelectorsStatus","useSelector","state","optionsStreets","map","str","value","name","optionsHouses","hs","optionsApartments","ap","flat","useEffect","className","styles","selectWrapper","loading","placeholder","onChange","streetID","showSearch","filterOption","input","option","children","toLowerCase","indexOf","style","width","houseID","apartmentID","setApartmentID","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","CreateClientForm","client","infoWrapper","info","onFinish","values","user","Item","label","rules","pattern","RegExp","offset","htmlType","block","EditClientForm","props","bindId","defaultValue","phone","Clients","modalStatus","setModalStatus","clientPhone","setClientPhone","clientEmail","setClientEmail","clientName","setClientName","setClientId","clientBindId","setClientBindId","onRemoveClient","removeClient","wrapper","cl","item","itemInfo","content","margin","onClick","icons","change","remove","footer","title","visible","onCancel","App","app","setTimeout","cardHeading","disabled","tip","commonAlert","showIcon","closable","closeText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","cityId","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0197a73f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"CreateClientForm_infoWrapper__ugL9b\",\"info\":\"CreateClientForm_info__niyM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"FindAddressForm_selectWrapper__1E_k_\"};","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://dispex.org/api/vtest/'\r\n})\r\n\r\nexport const addressApi = {\r\n    getStreets() {\r\n        return instance.get('Request/streets')\r\n    },\r\n    getHouses(id) {\r\n        return instance.get(`Request/houses/${id}`)\r\n    },\r\n    getApartments(id) {\r\n        return instance.get(`Request/house_flats/${id}`)\r\n    },\r\n}\r\n\r\nexport const clientApi = {\r\n    createClient(clientData) {\r\n        return instance.post(`/HousingStock/client`, clientData)\r\n    },\r\n    getClient(phone) {\r\n        return instance.get(`/HousingStock/client?phone=${phone}`)\r\n    },\r\n    bindClient(addressId, clientId) {\r\n        return instance.put(`/HousingStock/bind_client`, {addressId, clientId})\r\n    },\r\n    removeClient(clientId) {\r\n        return instance.delete(`/HousingStock/bind_client/${clientId}`)\r\n    },\r\n}\r\n\r\nexport const clientsApi = {\r\n    getAllClients(addressID) {\r\n        return instance.get(`HousingStock/clients?addressId=${addressID}`)\r\n    },\r\n}","import {addressApi} from \"../../api/commonApi\";\r\n\r\nconst addressReducerInitialState = {\r\n    streets: [],\r\n    houses: [],\r\n    apartments: [],\r\n    chosenStreet: {\r\n        Id: 0,\r\n        Prefix: {\r\n            Id: 0,\r\n            Name: \"\",\r\n            ShortName: \"\"\r\n        },\r\n        Name: \"\",\r\n        CityId: 0,\r\n        City: \"\",\r\n        NameWithPrefix: \"\",\r\n    },\r\n    chosenHouse: {\r\n        Id: 0,\r\n        Name: \"\",\r\n        Type: {\r\n            Id: 0,\r\n            Text: \"\",\r\n        }\r\n    },\r\n    chosenApartment: {\r\n        Id: 0,\r\n        Flat: \"\",\r\n        TypeId: 0,\r\n        TypeName: \"\",\r\n        Name: \"\"\r\n    },\r\n    isChosenApartment: false,\r\n}\r\n\r\nconst actionTypeNames = {\r\n    setStreets: 'address/SET-STREETS',\r\n    setHouses: 'address/SET-HOUSES',\r\n    setApartments: 'address/SET-APARTMENTS',\r\n    setChosenStreet: 'address/SET-CHOSEN-STREET',\r\n    setChosenHouse: 'address/SET-CHOSEN-HOUSE',\r\n    setChosenApartment: 'address/SET-CHOSEN-APARTMENT',\r\n    toggleIsChosenApartment: 'address/TOGGLE-IS-CHOSEN-APARTMENT',\r\n}\r\n\r\nexport const addressReducer = (state = addressReducerInitialState, action) => {\r\n    switch (action.type){\r\n        case actionTypeNames.setStreets:\r\n            return {...state, streets: action.payload.streets.filter( str => str.cityId === 1)}\r\n        case actionTypeNames.setHouses:\r\n            return {...state, houses: action.payload.houses}\r\n        case actionTypeNames.setApartments:\r\n            return {...state, apartments: action.payload.apartments}\r\n        case actionTypeNames.setChosenStreet:\r\n            return {...state, chosenStreet: action.payload.chosenStreet}\r\n        case actionTypeNames.setChosenHouse:\r\n            return {...state, chosenHouse: action.payload.chosenHouse}\r\n        case actionTypeNames.setChosenApartment:\r\n            return {...state, chosenApartment: action.payload.chosenApartment}\r\n        case actionTypeNames.toggleIsChosenApartment:\r\n            return {...state, isChosenApartment: action.payload.isChosenApartment}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ACTIONS\r\nconst setStreets = (streets) => ({type: actionTypeNames.setStreets, payload: {streets}})\r\nconst setHouses = (houses) => ({type: actionTypeNames.setHouses, payload: {houses}})\r\nconst setApartments = (apartments) => ({type: actionTypeNames.setApartments, payload: {apartments}})\r\nconst setChosenStreet = (chosenStreet) => ({type: actionTypeNames.setChosenStreet, payload: {chosenStreet}})\r\nconst setChosenHouse = (chosenHouse) => ({type: actionTypeNames.setChosenHouse, payload: {chosenHouse}})\r\nexport const setChosenApartment = (chosenApartment) => ({type: actionTypeNames.setChosenApartment, payload: {chosenApartment}})\r\nexport const toggleIsChosenApartment = (status) => ({type: actionTypeNames.toggleIsChosenApartment, payload: {isChosenApartment: status}})\r\n\r\n// THUNKS\r\nexport const getStreets = () => async (dispatch) => {\r\n    try {\r\n        const response = await addressApi.getStreets()\r\n        dispatch(setStreets(response.data))\r\n        dispatch(toggleIsChosenApartment(false))\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\nexport const getHouses = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setChosenStreet(...getState().address.streets.filter( str => str.id === id)))\r\n        dispatch(setChosenHouse({}))\r\n        dispatch(setChosenApartment({}))\r\n        const response = await addressApi.getHouses(id)\r\n        dispatch(setHouses(response.data))\r\n        dispatch(toggleIsChosenApartment(false))\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\nexport const getApartments= (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setChosenHouse(...getState().address.houses.filter( h => h.id === id)))\r\n        dispatch(setChosenApartment({}))\r\n        const response = await addressApi.getApartments(id)\r\n        dispatch(setApartments(response.data))\r\n        dispatch(toggleIsChosenApartment(false))\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}","const clientsInApartmentInitialState = {\r\n    errorMessage: '',\r\n    successMessage: '',\r\n}\r\n\r\nconst actionTypeNames = {\r\n    setErrorMessage: 'app/SET-ERROR-MESSAGE',\r\n    setSuccessMessage: 'app/SET-SUCCESS-MESSAGE',\r\n    resetMessages: 'app/RESET-MESSAGES',\r\n}\r\n\r\nexport const appReducer = (state = clientsInApartmentInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypeNames.setErrorMessage:\r\n            return {...state, errorMessage: action.payload.errorMessage, successMessage: ''}\r\n        case actionTypeNames.setSuccessMessage:\r\n            return {...state, successMessage: action.payload.successMessage, errorMessage: ''}\r\n        case actionTypeNames.resetMessages:\r\n            return {...state, successMessage: '', errorMessage: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ACTIONS\r\nexport const setErrorMessage = (errorMessage) => ({type: actionTypeNames.setErrorMessage, payload: {errorMessage}})\r\nexport const setSuccessMessage = (successMessage) => ({type: actionTypeNames.setSuccessMessage, payload: {successMessage}})\r\nexport const resetMessages = () => ({type: actionTypeNames.resetMessages})","import {clientApi, clientsApi} from \"../../api/commonApi\";\r\nimport {setChosenApartment, toggleIsChosenApartment} from \"../addressReducer/addressReducer\";\r\nimport {setErrorMessage, setSuccessMessage} from \"../appReducer/appReducer\";\r\n\r\nconst clientsInApartmentInitialState = {\r\n    clients: [],\r\n    clientsText: 'Выберите интересующую вас квартиру'\r\n}\r\n\r\nconst actionTypeNames = {\r\n    setClients: 'clients/SET-CLIENTS',\r\n    changeClientsText: 'clients/CHANGE-CLIENTS-TEXT',\r\n}\r\n\r\nexport const clientsInApartmentReducer = (state = clientsInApartmentInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypeNames.setClients:\r\n            return {...state, clients: action.payload.clients}\r\n        case actionTypeNames.changeClientsText:\r\n            return {...state, clientsText: action.payload.text}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ACTIONS\r\nconst setClients = (clients) => ({type: actionTypeNames.setClients, payload: {clients}})\r\nconst changeClientsText = (text) => ({type: actionTypeNames.changeClientsText, payload: {text}})\r\n\r\n// THUNKS\r\nexport const getClientsInApartment = (addressID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setChosenApartment(...getState().address.apartments.filter(h => h.id === addressID)))\r\n        const response = await clientsApi.getAllClients(addressID)\r\n        if (response.data.length) {\r\n            dispatch(changeClientsText('Список жильцов'))\r\n        } else {\r\n            dispatch(changeClientsText('По этому адресу никого не найдено'))\r\n        }\r\n        if (!response.data) {\r\n            dispatch(setClients([]))\r\n        } else {\r\n            dispatch(setClients(response.data))\r\n        }\r\n        dispatch(toggleIsChosenApartment(true))\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\nexport const removeClient = id => async dispatch => {\r\n    try {\r\n        await clientApi.removeClient(id)\r\n        dispatch(setSuccessMessage('Клиент удален из списка'))\r\n    } catch (error) {\r\n        dispatch(setErrorMessage(error.message))\r\n    }\r\n}","import {clientApi} from \"../../api/commonApi\";\r\nimport {setErrorMessage, setSuccessMessage} from \"../appReducer/appReducer\";\r\n\r\nconst clientInitialState = {\r\n    id: 0,\r\n    result: '',\r\n    message: '',\r\n    addressId: 0,\r\n    clientId: 0,\r\n}\r\n\r\nconst actionTypeNames = {\r\n    setClient: 'client/SET-CLIENT',\r\n    setApartmentID: 'clients/SET-APARTMENT-ID',\r\n}\r\n\r\nexport const clientReducer = (state = clientInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypeNames.setApartmentID:\r\n            return {...state, addressId: action.payload.apartmentID}\r\n        case actionTypeNames.setClient:\r\n            return {...state, ...action.payload.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ACTIONS\r\nconst setClient = (data) => ({type: actionTypeNames.setClient, payload: {data}})\r\nexport const setApartmentID = (apartmentID) => ({type: actionTypeNames.setApartmentID, payload: {apartmentID}})\r\n\r\n// THUNKS\r\nexport const createClient = (Id, Name, Phone, Email, BindId) => async dispatch => {\r\n    try {\r\n        const response = await clientApi.createClient({Id, Name, Phone, Email, BindId})\r\n        dispatch(setClient(response.data))\r\n        dispatch(setSuccessMessage(response.data.result))\r\n    } catch (error) {\r\n        dispatch(setErrorMessage(error.message))\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport styles from './FindAddressForm.module.css'\r\nimport 'antd/dist/antd.css';\r\nimport {Select} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApartments, getHouses} from \"../../redux/addressReducer/addressReducer\";\r\nimport {getClientsInApartment} from \"../../redux/clientsReducer/clientsReducer\";\r\nimport {setApartmentID} from \"../../redux/clientReducer/clientReducer\";\r\n\r\nconst {Option} = Select\r\n\r\nexport const FindAddressForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectorsStatus, setSelectorsStatus] = useState(false)\r\n\r\n    const streets = useSelector(state => state.address.streets)\r\n    const houses = useSelector(state => state.address.houses)\r\n    const apartments = useSelector(state => state.address.apartments)\r\n    const clients = useSelector(state => state.clients.clients)\r\n\r\n    const optionsStreets = streets.map(str => <Option key={str.id} value={str.id}>{str.name}</Option>)\r\n    const optionsHouses = houses.map(hs => <Option key={hs.id} value={hs.id}>{hs.name}</Option>)\r\n    const optionsApartments = apartments.map(ap => <Option key={ap.id} value={ap.id}>{ap.flat}</Option>)\r\n\r\n    const onStreetSelected = (streetID) => {\r\n        setSelectorsStatus(true)\r\n        dispatch(getHouses(streetID))\r\n    }\r\n    const onHouseSelected = (houseID) => {\r\n        setSelectorsStatus(true)\r\n        dispatch(getApartments(houseID))\r\n    }\r\n    const onApartmentSelected = (apartmentID) => {\r\n        setSelectorsStatus(true)\r\n        dispatch(getClientsInApartment(apartmentID))\r\n        dispatch(setApartmentID(apartmentID))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectorsStatus(false)\r\n    }, [streets, houses, apartments, clients])\r\n\r\n    return (\r\n        <div className={styles.selectWrapper}>\r\n            <Select loading={selectorsStatus}\r\n                    placeholder=\"Улица\"\r\n                    onChange={onStreetSelected}\r\n                    showSearch\r\n                    filterOption={(input, option) =>\r\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                    style={{width: 200}}>\r\n                {optionsStreets}\r\n            </Select>\r\n            <Select loading={selectorsStatus}\r\n                    placeholder=\"Дом\"\r\n                    onChange={onHouseSelected}\r\n                    showSearch\r\n                    filterOption={(input, option) =>\r\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                    style={{width: 200}}>\r\n                {optionsHouses}\r\n            </Select>\r\n            <Select loading={selectorsStatus}\r\n                    placeholder=\"Квартира\"\r\n                    onChange={onApartmentSelected}\r\n                    showSearch\r\n                    filterOption={(input, option) =>\r\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                    style={{width: 200}}>\r\n                {optionsApartments}\r\n            </Select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './CreateClientForm.module.css'\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createClient} from \"../../redux/clientReducer/clientReducer\";\r\nimport {getClientsInApartment} from \"../../redux/clientsReducer/clientsReducer\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport const CreateClientForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const addressId = useSelector(state => state.client.addressId)\r\n    const chosenStreet = useSelector(state => state.address.chosenStreet.name)\r\n    const chosenHouse = useSelector(state => state.address.chosenHouse.name)\r\n    const chosenApartment = useSelector(state => state.address.chosenApartment.flat)\r\n\r\n    const onFinish = (values) => {\r\n        const {name, number, email} = values.user\r\n        dispatch(createClient(0, name, number, email, addressId))\r\n        dispatch(getClientsInApartment(addressId))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.infoWrapper}>\r\n                <p className={styles.info}><span>Улица</span> {chosenStreet}</p>\r\n                <p className={styles.info}><span>Дом №</span> {chosenHouse} / {chosenApartment}</p>\r\n            </div>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item\r\n                    name={['user', 'number']}\r\n                    label=\"Телефон\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern: new RegExp(/^\\+?[0-9]{3}-?[0-9]{6,12}$/),\r\n                            message: 'You should use only numbers and +'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={['user', 'email']}\r\n                    label=\"Email\"\r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={['user', 'name']}\r\n                    label=\"Ф.И.О\"\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{...layout.wrapperCol, offset: 4}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>\r\n                        Добавить клиента\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {createClient} from \"../../redux/clientReducer/clientReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst layout = {\r\n    labelCol: {span: 4,},\r\n    wrapperCol: {span: 16,},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {email: '${label} is not a valid email!', number: '${label} is not a valid number!',},\r\n    number: {range: '${label} must be between ${min} and ${max}',},\r\n};\r\n\r\nexport const EditClientForm = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onFinish = (values) => {\r\n        const {name, number, email} = values.user\r\n        dispatch(createClient(props.id, name, number, email, props.bindId))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item\r\n                    name={['user', 'number']}\r\n                    label=\"Телефон\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern: new RegExp(/^\\+?[0-9]{3}-?[0-9]{6,12}$/),\r\n                            message: 'You should use only numbers and +'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input defaultValue={props.phone}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={['user', 'email']}\r\n                    label=\"Email\"\r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input defaultValue={props.email}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={['user', 'name']}\r\n                    label=\"Ф.И.О\"\r\n                >\r\n                    <Input defaultValue={props.name}/>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{...layout.wrapperCol, offset: 4}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" block>\r\n                        Изменить данные\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport styles from './Client.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Modal, Popover} from \"antd\";\r\nimport {removeClient} from \"../../redux/clientsReducer/clientsReducer\";\r\nimport {EditClientForm} from \"../EditClientForm/EditClientForm\";\r\n\r\nexport const Clients = () => {\r\n    const clients = useSelector(state => state.clients.clients)\r\n    const clientsText = useSelector(state => state.clients.clientsText)\r\n    const dispatch = useDispatch()\r\n\r\n    const [modalStatus, setModalStatus] = useState(false)\r\n    const [clientPhone, setClientPhone] = useState('')\r\n    const [clientEmail, setClientEmail] = useState('')\r\n    const [clientName, setClientName] = useState('')\r\n    const [clientId, setClientId] = useState(0)\r\n    const [clientBindId, setClientBindId] = useState(0)\r\n\r\n    const showModal = (phone, email, name, id, bindId) => {\r\n        setClientPhone(phone)\r\n        setClientEmail(email)\r\n        setClientName(name)\r\n        setClientId(id)\r\n        setClientBindId(bindId)\r\n        setModalStatus(true)\r\n    }\r\n    const handleCancel = () => {\r\n        setModalStatus(false)\r\n    }\r\n\r\n\r\n    const onRemoveClient = (id) => {\r\n        dispatch(removeClient(id))\r\n    }\r\n\r\n    return (\r\n        <div className={`cardBg ${styles.wrapper}`}>\r\n            {clientsText && <p className={styles.text}>{clientsText}</p>}\r\n            {clients.map(cl => <div className={styles.item} key={cl.id}>\r\n                <p className={styles.itemInfo}><b>Имя:</b> {cl.name}</p>\r\n                <p className={styles.itemInfo}><b>Email:</b> {cl.email}</p>\r\n                <p className={styles.itemInfo}><b>Телефон:</b> {cl.phone}</p>\r\n                <Popover content={<p style={{margin: 0}}>Редактировать</p>}>\r\n                    <div onClick={() => showModal(cl.phone, cl.email, cl.name, cl.id, cl.bindId)}\r\n                         className={`${styles.icons} ${styles.change}`}>✎\r\n                    </div>\r\n                </Popover>\r\n                <Popover content={<p style={{margin: 0}}>Удалить</p>}>\r\n                    <div onClick={() => onRemoveClient(cl.id)} className={`${styles.icons} ${styles.remove}`}>🕱</div>\r\n                </Popover>\r\n            </div>)}\r\n            {modalStatus &&\r\n            <Modal footer={null}\r\n                   title=\"Редактировать данные клиента\"\r\n                   visible={modalStatus}\r\n                   onCancel={handleCancel}\r\n            >\r\n                <EditClientForm phone={clientPhone}\r\n                                id={clientId}\r\n                                bindId={clientBindId}\r\n                                email={clientEmail}\r\n                                name={clientName}/>\r\n            </Modal>}\r\n        </div>\r\n    )\r\n}","import styles from './App.module.css';\nimport React, {useEffect, useState} from \"react\";\nimport {FindAddressForm} from \"./Components/FindAddressForm/FindAddressForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStreets} from \"./redux/addressReducer/addressReducer\";\nimport {CreateClientForm} from \"./Components/CreateClientForm/CreateClientForm\";\nimport {Clients} from \"./Components/Clients/Clients\";\nimport {Alert, Button, Modal, Popover} from \"antd\";\nimport {resetMessages} from \"./redux/appReducer/appReducer\";\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    const isChosenApartment = useSelector(state => state.address.isChosenApartment)\n    const errorMessage = useSelector(state => state.app.errorMessage)\n    const successMessage = useSelector(state => state.app.successMessage)\n\n    const [modalStatus, setModalStatus] = useState(false)\n\n    const showModal = () => {\n        setModalStatus(true)\n    }\n    const handleCancel = () => {\n        setModalStatus(false)\n    }\n\n    useEffect(() => {\n        dispatch(getStreets())\n    }, [dispatch])\n\n    useEffect(() => {\n        setTimeout(() => {\n            dispatch(resetMessages())\n        }, 6000)\n    }, [dispatch, errorMessage, successMessage])\n\n    return (\n        <div className={styles.App}>\n            <h1 className={styles.title}>Dispex</h1>\n            <div className={'cardBg'}>\n                <h2 className={styles.cardHeading}>Выберите квартиру</h2>\n                <FindAddressForm/>\n                <Button block onClick={showModal} type=\"primary\" disabled={!isChosenApartment}>\n                    Добавить жильца\n                </Button>\n                <Popover content={<p style={{margin: 0}}>все корпуса  + привязываться к квартирам, а не к подъездам и домам</p>}>\n                    <p className={styles.tip}><b>Адрес для тестов:</b> Федюнинского 30</p>\n                </Popover>\n            </div>\n            <Clients/>\n            {modalStatus &&\n            <Modal footer={null}\n                   title=\"Добавить жильца по адресу:\"\n                   visible={modalStatus}\n                   onCancel={handleCancel}\n            >\n                <CreateClientForm/>\n            </Modal>}\n            {successMessage || errorMessage\n                ? <div className={styles.commonAlert}>\n                    <Alert message={successMessage || errorMessage} type={errorMessage ? 'error' : 'success'} showIcon\n                           closable closeText=\"Закрыть Х\"/>\n                </div> : null}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {addressReducer} from \"./addressReducer/addressReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {clientsInApartmentReducer} from \"./clientsReducer/clientsReducer\";\r\nimport {clientReducer} from \"./clientReducer/clientReducer\";\r\nimport {appReducer} from \"./appReducer/appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    address: addressReducer,\r\n    client: clientReducer,\r\n    clients: clientsInApartmentReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Client_wrapper__2gl4B\",\"text\":\"Client_text__HzllN\",\"item\":\"Client_item__2C6dp\",\"icons\":\"Client_icons__2Zbar\",\"change\":\"Client_change__1Jjy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1IjfQ\",\"title\":\"App_title__2sSSF\",\"commonAlert\":\"App_commonAlert__2m6P1\",\"cardHeading\":\"App_cardHeading__2q0O-\",\"tip\":\"App_tip__1gIYI\"};"],"sourceRoot":""}